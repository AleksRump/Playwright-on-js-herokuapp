name: Run Playwright Tests

on:
  push:
    branches:
      - master  # Запускается при каждом пуше в master
  workflow_dispatch:
    inputs:
      browser:
        type: choice
        description: Which browser to test
        required: true
        options:
          - firefox
          - chromium
          - webkit

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*  # Устанавливаем Node.js

      - name: Install dependencies
        run: |
          npm ci  # Устанавливаем все зависимости для проекта

      - name: Install Playwright browsers
        run: |
          npx playwright install --with-deps  # Устанавливаем необходимые браузеры

      - name: Run Playwright tests
        run: |
          npx playwright test --project ${{ github.event.inputs.browser }}  # Запуск Playwright тестов через npm script
      
      - uses: actions/upload-artifact@v4  # отчёт о тестировании Playwright загружается в качестве артефакта. Условие if: always() гарантирует, что отчёт будет загружен, даже если тесты завершатся неудачно. Артефакт сохраняется в течение 30 дней.
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Save test report
        run: |
          mkdir -p Reports
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          cp tests/test-results/results.json Reports/  # Копируем отчёт в формате JSON в папку Reports
          echo "Test execution completed on $TIMESTAMP" > Reports/summary_$TIMESTAMP.txt

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add Reports/
          git commit -m "Add test reports after push" || echo "No changes to commit"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
